// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// grad_hess_mvm
Rcpp::List grad_hess_mvm(arma::mat theta, arma::vec kappa, arma::mat Lambda);
RcppExport SEXP _ridgetorus_grad_hess_mvm(SEXP thetaSEXP, SEXP kappaSEXP, SEXP LambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Lambda(LambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_hess_mvm(theta, kappa, Lambda));
    return rcpp_result_gen;
END_RCPP
}
// grad_hess_mwn
Rcpp::List grad_hess_mwn(arma::mat theta, arma::vec mu, arma::mat Sigma, arma::mat k);
RcppExport SEXP _ridgetorus_grad_hess_mwn(SEXP thetaSEXP, SEXP muSEXP, SEXP SigmaSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_hess_mwn(theta, mu, Sigma, k));
    return rcpp_result_gen;
END_RCPP
}
// grad_hess_bwc
Rcpp::List grad_hess_bwc(arma::vec theta2, double theta1, arma::vec xi);
RcppExport SEXP _ridgetorus_grad_hess_bwc(SEXP theta2SEXP, SEXP theta1SEXP, SEXP xiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta2(theta2SEXP);
    Rcpp::traits::input_parameter< double >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type xi(xiSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_hess_bwc(theta2, theta1, xi));
    return rcpp_result_gen;
END_RCPP
}
// implicit_equation
arma::vec implicit_equation(arma::vec theta2, double theta1, String density, arma::vec kappa, Rcpp::Nullable<NumericMatrix> Lambda, arma::vec xi, arma::vec mu, Rcpp::Nullable<NumericMatrix> Sigma, Rcpp::Nullable<NumericMatrix> k);
RcppExport SEXP _ridgetorus_implicit_equation(SEXP theta2SEXP, SEXP theta1SEXP, SEXP densitySEXP, SEXP kappaSEXP, SEXP LambdaSEXP, SEXP xiSEXP, SEXP muSEXP, SEXP SigmaSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type theta2(theta2SEXP);
    Rcpp::traits::input_parameter< double >::type theta1(theta1SEXP);
    Rcpp::traits::input_parameter< String >::type density(densitySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<NumericMatrix> >::type Lambda(LambdaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<NumericMatrix> >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<NumericMatrix> >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(implicit_equation(theta2, theta1, density, kappa, Lambda, xi, mu, Sigma, k));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ridgetorus_grad_hess_mvm", (DL_FUNC) &_ridgetorus_grad_hess_mvm, 3},
    {"_ridgetorus_grad_hess_mwn", (DL_FUNC) &_ridgetorus_grad_hess_mwn, 4},
    {"_ridgetorus_grad_hess_bwc", (DL_FUNC) &_ridgetorus_grad_hess_bwc, 3},
    {"_ridgetorus_implicit_equation", (DL_FUNC) &_ridgetorus_implicit_equation, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_ridgetorus(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
